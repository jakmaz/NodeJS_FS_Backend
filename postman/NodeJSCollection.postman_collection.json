{
	"info": {
		"_postman_id": "3cfdeec8-7f58-4d53-9c83-fb4b4d3d1a94",
		"name": "NodeJS Udemy Course",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34500830"
	},
	"item": [
		{
			"name": "Service Running",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3001",
					"host": [
						"localhost"
					],
					"port": "3001"
				}
			},
			"response": []
		},
		{
			"name": "Error route",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3001/test",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"test"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User by ID",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3001/users/34",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"users",
						"34"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", () => {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Message\", () => {",
							"    const response = pm.response.json();",
							"    const reqBody = JSON.parse(pm.request.body.raw)",
							"    pm.environment.set(\"password\", reqBody.password);",
							"    pm.expect(response).to.have.property(\"message\", \"Successful Registration\");",
							"})",
							"",
							"pm.test(\"Payload\", () => {",
							"    const response = pm.response.json();",
							"    const user = response.user;",
							"    pm.expect(user).to.have.property(\"firstName\", \"Bob\")",
							"    pm.expect(user).to.have.property(\"firstName\", \"Bob\");",
							"    pm.expect(user).to.have.property(\"lastName\", \"Swirl\");",
							"    pm.expect(user).to.have.property(\"address\", \"123 Mina Ct\");",
							"    pm.expect(user).to.have.property(\"city\", \"Miami\");",
							"    pm.expect(user).to.have.property(\"state\", \"OH\");",
							"    pm.expect(user).to.have.property(\"zipCode\", \"13467\");",
							"",
							"    pm.environment.set(\"email\", user.email);",
							"    pm.environment.set(\"hash\", user.password);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"Bob\",\n    \"lastName\": \"Swirl\",\n    \"address\": \"123 Mina Ct\",\n    \"city\": \"Miami\",\n    \"state\": \"OH\",\n    \"zipCode\": \"13467\",\n    \"email\": \"bob{{$guid}}@Bob.com\",\n    \"password\": \"123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3001/users/register",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"users",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register Bad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", () => {",
							"    pm.response.to.have.status(501);",
							"});",
							"",
							"pm.test(\"Message\", () => {",
							"    const response = pm.response.json();",
							"    const error = response.error;",
							"    pm.expect(error).to.have.property(\"message\", \"User already exists\");",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"Bob\",\n    \"lastName\": \"Swirl\",\n    \"address\": \"123 Mina Ct\",\n    \"city\": \"Miami\",\n    \"state\": \"OH\",\n    \"zipCode\": \"13467\",\n    \"email\": \"bob@Bob.com\",\n    \"password\": \"123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3001/users/register",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"users",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", () => {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Message\", () => {",
							"    const response = pm.response.json();",
							"    pm.expect(response).to.have.property(\"message\", \"Login Successful\");",
							"})",
							"",
							"pm.test(\"Payload\", () => {",
							"    const response = pm.response.json();",
							"    const user = response.user;",
							"    const email = user.email;",
							"    pm.expect(user).to.have.property(\"firstName\", \"Bob\")",
							"    pm.expect(user).to.have.property(\"firstName\", \"Bob\");",
							"    pm.expect(user).to.have.property(\"lastName\", \"Swirl\");",
							"    pm.expect(user).to.have.property(\"address\", \"123 Mina Ct\");",
							"    pm.expect(user).to.have.property(\"city\", \"Miami\");",
							"    pm.expect(user).to.have.property(\"state\", \"OH\");",
							"    pm.expect(user).to.have.property(\"zipCode\", \"13467\");",
							"    pm.expect(user).to.have.property(\"email\", email);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3001/users/login",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login Bad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", () => {",
							"    pm.response.to.have.status(501);",
							"});",
							"",
							"pm.test(\"Message\", () => {",
							"    const response = pm.response.json();",
							"    const error = response.error;",
							"    pm.expect(error).to.have.property(\"message\", \"Authentication Failed: Unable to find user\");",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"me@me.com\",\n    \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3001/users/login",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"users",
						"login"
					]
				}
			},
			"response": []
		}
	]
}